#!/usr/bin/env python
import logging
import signal
import lib.logger as log
import lib.parser as prsr
import lib.constants as cte
from lib.udp_server import UDPServer


def main():
    parser = prsr.server()
    args = parser.parse_args()
    
    log.configure_log(args.verbosity, cte.SERVER_LOG_FILE)
    logger = logging.getLogger(__name__)
    logger.debug(f'Arguments: {args}')

    srv = UDPServer(args.host, args.port, args.storage, args.protocol)

    try:
        srv.start()
        srv.run()
    except SignalException:
        logger.info("Exiting server...")
    except Exception as e:
        logger.critical('Unknown Error - Server closed')
        logger.critical(e.with_traceback())
    finally:
        logger.info("Stopping server...")
        srv.stop()


class SignalException(Exception):
    # do nothing
    pass


def handler(signum, frame):
    raise SignalException()


if __name__ == "__main__":
    signal.signal(signal.SIGINT, handler)
    signal.signal(signal.SIGTERM, handler)
    main()
